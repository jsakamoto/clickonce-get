@inherits LayoutComponentBase
@inject HttpClient HttpClient
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<div>
    <MudAppBar Fixed="false" Elevation="0">
        <h1><a href="/">ClickOnce Get</a></h1>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                <span class="user-view">
                    <MudAvatar Image="@($"https://avatars.githubusercontent.com/{context.User.Identity.Name}")" Size="Size.Small" alt="@context.User.Identity.Name" />
                    @context.User.Identity.Name
                </span>
            </Authorized>
        </AuthorizeView>
        <MudIconButton Icon="@Icons.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
    </MudAppBar>
</div>

<div class="drawer-mask @CssClass(new { open, home })" @onclick="OnClickDrawerMask">
</div>

<div class="drawer @CssClass(new { open, home })">
    <MudNavMenu>
        <MudNavLink Href="/" Match="NavLinkMatch.All"><MudIcon Icon="@Icons.Filled.Home" />Home</MudNavLink>
        <MudNavLink Href="/myapps/upload" Match="NavLinkMatch.All"><MudIcon Icon="@Icons.Filled.Publish" />Upload your app</MudNavLink>
        <MudNavLink Href="/myapps" Match="NavLinkMatch.All"><MudIcon Icon="@Icons.Filled.ViewList" />Manage your apps</MudNavLink>
        <MudNavLink Href="/documents" Match="NavLinkMatch.Prefix"><MudIcon Icon="@Icons.Filled.ImportContacts" />Documents</MudNavLink>
        <AuthorizeView>
            <Authorized>
                <div class="mud-nav-item mud-ripple sign-out">
                    <a class="mud-nav-link" @onclick="OnClickSignOut">
                        <div class="mud-nav-link-text"><MudIcon Icon="@Icons.Filled.ExitToApp" />Sign out</div>
                    </a>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="mud-nav-item mud-ripple sign-in">
                    <SignInUrlProvider Context="SignInUrl">
                        <a class="mud-nav-link" href="@SignInUrl" target="_top">
                            <div class="mud-nav-link-text"><MudIcon Icon="@Icons.Filled.Login" />Sign in with GitHub</div>
                        </a>
                    </SignInUrlProvider>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </MudNavMenu>
</div>

<div class="main-container">
    @Body
</div>

<footer>
    <div>
        <span>
            Powered by <a href="https://blazor.net" target="_blank">Blazor WebAssembly</a>
            with <a href="https://asp.net" target="_blank">ASP.NET Core Hosted</a>
        </span>
        <span> | </span>
        <span><a href="https://mudblazor.com/" target="_blank"><MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Size="Size.Small" /> MudBlazor</a></span>
        <span> | </span>
        <span><a href="https://github.com/jsakamoto/clickonce-get" target="_blank"><MudIcon Icon="@Icons.Custom.Brands.GitHub" Size="Size.Small" /> GNU General Public License V3.0</a></span>
    </div>
</footer>

@code {
    private bool open = false;

    private bool home = false;

    protected override void OnInitialized()
    {
        this.NavigationManager.LocationChanged += OnLocationChanged;
        this.UpdateHomeFlag();
    }

    private void OnLocationChanged(object sender, EventArgs e)
    {
        this.open = false;
        this.UpdateHomeFlag();
        this.StateHasChanged();
    }

    private void UpdateHomeFlag()
    {
        this.home = new Uri(this.NavigationManager.Uri).PathAndQuery == "/";
    }

    private async Task OnClickSignOut()
    {
        this.open = false;
        await this.HttpClient.PostAsync("auth/signout", new StringContent(""));
        await (AuthStateProvider as ClientSideAuthenticationStateProvider)?.RefreshAsync();
        this.NavigationManager.NavigateTo("/");
    }

    private void ToggleDrawer()
    {
        this.open = !this.open;
    }

    private void OnClickDrawerMask()
    {
        this.open = false;
    }
}
