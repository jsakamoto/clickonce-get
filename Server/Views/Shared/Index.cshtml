@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@using Microsoft.AspNetCore.Http
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <title>ClickOnce Get</title>
    <base href="/" />

    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link href="ClickOnceGet.Client.styles.css" rel="stylesheet" />
    <link href="css/blazor-error-ui.css" rel="stylesheet" />
    <link href="css/app.css" rel="stylesheet" />
</head>

<body>
    <div id="app">
        <component type="typeof(ClickOnceGet.Client.App)" render-mode="WebAssemblyPrerendered" />
    </div>

    <div id="blazor-error-ui">
        An unhandled error has occurred.
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    <script src="_framework/blazor.webassembly.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="scripts/helper.js"></script>
    <persist-component-state />
</body>

</html>

@{
    var httpContext = this.ViewContext.HttpContext;
    var tokens = this.Antiforgery.GetAndStoreTokens(httpContext);
    var options = new CookieOptions { SameSite = SameSiteMode.Strict, HttpOnly = false };
    httpContext.Response.Cookies.Append("X-ANTIFORGERY-TOKEN", tokens.RequestToken, options);
}